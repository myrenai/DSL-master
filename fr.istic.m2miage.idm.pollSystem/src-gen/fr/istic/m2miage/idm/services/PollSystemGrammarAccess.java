/*
* generated by Xtext
*/
package fr.istic.m2miage.idm.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PollSystemGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class PollSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PollSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPollSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPollsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPollsPollParserRuleCall_3_0 = (RuleCall)cPollsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PollSystem:
		//	"PollSystem" name=ID "{" polls+=Poll+ "}";
		public ParserRule getRule() { return rule; }

		//"PollSystem" name=ID "{" polls+=Poll+ "}"
		public Group getGroup() { return cGroup; }

		//"PollSystem"
		public Keyword getPollSystemKeyword_0() { return cPollSystemKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//polls+=Poll+
		public Assignment getPollsAssignment_3() { return cPollsAssignment_3; }

		//Poll
		public RuleCall getPollsPollParserRuleCall_3_0() { return cPollsPollParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class PollElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Poll");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPollKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDescriptionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_2_0 = (RuleCall)cDescriptionAssignment_3_2.eContents().get(0);
		private final Assignment cQuestionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cQuestionsQuestionParserRuleCall_4_0 = (RuleCall)cQuestionsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Poll:
		//	"Poll" name=ID "{" ("description" ":" description=STRING)? questions+=Question+ "}";
		public ParserRule getRule() { return rule; }

		//"Poll" name=ID "{" ("description" ":" description=STRING)? questions+=Question+ "}"
		public Group getGroup() { return cGroup; }

		//"Poll"
		public Keyword getPollKeyword_0() { return cPollKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("description" ":" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_2() { return cDescriptionAssignment_3_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_2_0() { return cDescriptionSTRINGTerminalRuleCall_3_2_0; }

		//questions+=Question+
		public Assignment getQuestionsAssignment_4() { return cQuestionsAssignment_4; }

		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_4_0() { return cQuestionsQuestionParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class QuestionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Question");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTextQuestionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cImageQuestionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSingleChoiceQuestionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cMultipleChoiceQuestionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Question:
		//	TextQuestion | ImageQuestion | SingleChoiceQuestion | MultipleChoiceQuestion;
		public ParserRule getRule() { return rule; }

		//TextQuestion | ImageQuestion | SingleChoiceQuestion | MultipleChoiceQuestion
		public Alternatives getAlternatives() { return cAlternatives; }

		//TextQuestion
		public RuleCall getTextQuestionParserRuleCall_0() { return cTextQuestionParserRuleCall_0; }

		//ImageQuestion
		public RuleCall getImageQuestionParserRuleCall_1() { return cImageQuestionParserRuleCall_1; }

		//SingleChoiceQuestion
		public RuleCall getSingleChoiceQuestionParserRuleCall_2() { return cSingleChoiceQuestionParserRuleCall_2; }

		//MultipleChoiceQuestion
		public RuleCall getMultipleChoiceQuestionParserRuleCall_3() { return cMultipleChoiceQuestionParserRuleCall_3; }
	}

	public class TextQuestionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextQuestion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextQuestionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTextKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTextAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_0 = (RuleCall)cTextAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TextQuestion:
		//	"TextQuestion" name=ID "{" "text" text=STRING "}";
		public ParserRule getRule() { return rule; }

		//"TextQuestion" name=ID "{" "text" text=STRING "}"
		public Group getGroup() { return cGroup; }

		//"TextQuestion"
		public Keyword getTextQuestionKeyword_0() { return cTextQuestionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"text"
		public Keyword getTextKeyword_3() { return cTextKeyword_3; }

		//text=STRING
		public Assignment getTextAssignment_4() { return cTextAssignment_4; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_0() { return cTextSTRINGTerminalRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ImageQuestionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImageQuestion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImageQuestionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTextKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTextAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_0 = (RuleCall)cTextAssignment_4.eContents().get(0);
		private final Keyword cImagePathKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cImagePathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cImagePathSTRINGTerminalRuleCall_7_0 = (RuleCall)cImagePathAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ImageQuestion:
		//	"ImageQuestion" name=ID "{" "text" text=STRING "imagePath" ":" imagePath=STRING "}";
		public ParserRule getRule() { return rule; }

		//"ImageQuestion" name=ID "{" "text" text=STRING "imagePath" ":" imagePath=STRING "}"
		public Group getGroup() { return cGroup; }

		//"ImageQuestion"
		public Keyword getImageQuestionKeyword_0() { return cImageQuestionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"text"
		public Keyword getTextKeyword_3() { return cTextKeyword_3; }

		//text=STRING
		public Assignment getTextAssignment_4() { return cTextAssignment_4; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_0() { return cTextSTRINGTerminalRuleCall_4_0; }

		//"imagePath"
		public Keyword getImagePathKeyword_5() { return cImagePathKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//imagePath=STRING
		public Assignment getImagePathAssignment_7() { return cImagePathAssignment_7; }

		//STRING
		public RuleCall getImagePathSTRINGTerminalRuleCall_7_0() { return cImagePathSTRINGTerminalRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class SingleChoiceQuestionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SingleChoiceQuestion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSingleChoiceQuestionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTextKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTextAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_0 = (RuleCall)cTextAssignment_4.eContents().get(0);
		private final Keyword cOptionsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cOptionsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOptionsSingleChoiceOptionParserRuleCall_7_0 = (RuleCall)cOptionsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//SingleChoiceQuestion:
		//	"SingleChoiceQuestion" name=ID "{" "text" text=STRING "Options" "{" options+=SingleChoiceOption+ "}" "}";
		public ParserRule getRule() { return rule; }

		//"SingleChoiceQuestion" name=ID "{" "text" text=STRING "Options" "{" options+=SingleChoiceOption+ "}" "}"
		public Group getGroup() { return cGroup; }

		//"SingleChoiceQuestion"
		public Keyword getSingleChoiceQuestionKeyword_0() { return cSingleChoiceQuestionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"text"
		public Keyword getTextKeyword_3() { return cTextKeyword_3; }

		//text=STRING
		public Assignment getTextAssignment_4() { return cTextAssignment_4; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_0() { return cTextSTRINGTerminalRuleCall_4_0; }

		//"Options"
		public Keyword getOptionsKeyword_5() { return cOptionsKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//options+=SingleChoiceOption+
		public Assignment getOptionsAssignment_7() { return cOptionsAssignment_7; }

		//SingleChoiceOption
		public RuleCall getOptionsSingleChoiceOptionParserRuleCall_7_0() { return cOptionsSingleChoiceOptionParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class MultipleChoiceQuestionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultipleChoiceQuestion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMultipleChoiceQuestionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTextKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTextAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTextSTRINGTerminalRuleCall_4_0 = (RuleCall)cTextAssignment_4.eContents().get(0);
		private final Keyword cOptionsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cOptionsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cOptionsMultipleChoiceOptionParserRuleCall_7_0 = (RuleCall)cOptionsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//MultipleChoiceQuestion:
		//	"MultipleChoiceQuestion" name=ID "{" "text" text=STRING "Options" "{" options+=MultipleChoiceOption+ "}" "}";
		public ParserRule getRule() { return rule; }

		//"MultipleChoiceQuestion" name=ID "{" "text" text=STRING "Options" "{" options+=MultipleChoiceOption+ "}" "}"
		public Group getGroup() { return cGroup; }

		//"MultipleChoiceQuestion"
		public Keyword getMultipleChoiceQuestionKeyword_0() { return cMultipleChoiceQuestionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"text"
		public Keyword getTextKeyword_3() { return cTextKeyword_3; }

		//text=STRING
		public Assignment getTextAssignment_4() { return cTextAssignment_4; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_4_0() { return cTextSTRINGTerminalRuleCall_4_0; }

		//"Options"
		public Keyword getOptionsKeyword_5() { return cOptionsKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//options+=MultipleChoiceOption+
		public Assignment getOptionsAssignment_7() { return cOptionsAssignment_7; }

		//MultipleChoiceOption
		public RuleCall getOptionsMultipleChoiceOptionParserRuleCall_7_0() { return cOptionsMultipleChoiceOptionParserRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class QuestionOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QuestionOption");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSingleChoiceOptionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMultipleChoiceOptionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//QuestionOption:
		//	SingleChoiceOption | MultipleChoiceOption;
		public ParserRule getRule() { return rule; }

		//SingleChoiceOption | MultipleChoiceOption
		public Alternatives getAlternatives() { return cAlternatives; }

		//SingleChoiceOption
		public RuleCall getSingleChoiceOptionParserRuleCall_0() { return cSingleChoiceOptionParserRuleCall_0; }

		//MultipleChoiceOption
		public RuleCall getMultipleChoiceOptionParserRuleCall_1() { return cMultipleChoiceOptionParserRuleCall_1; }
	}

	public class SingleChoiceOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SingleChoiceOption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisRightParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cOptionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOptionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOptionSTRINGTerminalRuleCall_4_0 = (RuleCall)cOptionAssignment_4.eContents().get(0);
		private final Keyword cValueKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueSTRINGTerminalRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		
		//SingleChoiceOption:
		//	"()" name=ID "option" ":" option=STRING "value" ":" value=STRING;
		public ParserRule getRule() { return rule; }

		//"()" name=ID "option" ":" option=STRING "value" ":" value=STRING
		public Group getGroup() { return cGroup; }

		//"()"
		public Keyword getLeftParenthesisRightParenthesisKeyword_0() { return cLeftParenthesisRightParenthesisKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"option"
		public Keyword getOptionKeyword_2() { return cOptionKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//option=STRING
		public Assignment getOptionAssignment_4() { return cOptionAssignment_4; }

		//STRING
		public RuleCall getOptionSTRINGTerminalRuleCall_4_0() { return cOptionSTRINGTerminalRuleCall_4_0; }

		//"value"
		public Keyword getValueKeyword_5() { return cValueKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//value=STRING
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_7_0() { return cValueSTRINGTerminalRuleCall_7_0; }
	}

	public class MultipleChoiceOptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultipleChoiceOption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketRightSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cOptionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOptionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOptionSTRINGTerminalRuleCall_4_0 = (RuleCall)cOptionAssignment_4.eContents().get(0);
		private final Keyword cValueKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValueSTRINGTerminalRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		
		//MultipleChoiceOption:
		//	"[]" name=ID "option" ":" option=STRING "value" ":" value=STRING;
		public ParserRule getRule() { return rule; }

		//"[]" name=ID "option" ":" option=STRING "value" ":" value=STRING
		public Group getGroup() { return cGroup; }

		//"[]"
		public Keyword getLeftSquareBracketRightSquareBracketKeyword_0() { return cLeftSquareBracketRightSquareBracketKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"option"
		public Keyword getOptionKeyword_2() { return cOptionKeyword_2; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//option=STRING
		public Assignment getOptionAssignment_4() { return cOptionAssignment_4; }

		//STRING
		public RuleCall getOptionSTRINGTerminalRuleCall_4_0() { return cOptionSTRINGTerminalRuleCall_4_0; }

		//"value"
		public Keyword getValueKeyword_5() { return cValueKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//value=STRING
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_7_0() { return cValueSTRINGTerminalRuleCall_7_0; }
	}
	
	
	private final PollSystemElements pPollSystem;
	private final PollElements pPoll;
	private final QuestionElements pQuestion;
	private final TextQuestionElements pTextQuestion;
	private final ImageQuestionElements pImageQuestion;
	private final SingleChoiceQuestionElements pSingleChoiceQuestion;
	private final MultipleChoiceQuestionElements pMultipleChoiceQuestion;
	private final QuestionOptionElements pQuestionOption;
	private final SingleChoiceOptionElements pSingleChoiceOption;
	private final MultipleChoiceOptionElements pMultipleChoiceOption;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PollSystemGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPollSystem = new PollSystemElements();
		this.pPoll = new PollElements();
		this.pQuestion = new QuestionElements();
		this.pTextQuestion = new TextQuestionElements();
		this.pImageQuestion = new ImageQuestionElements();
		this.pSingleChoiceQuestion = new SingleChoiceQuestionElements();
		this.pMultipleChoiceQuestion = new MultipleChoiceQuestionElements();
		this.pQuestionOption = new QuestionOptionElements();
		this.pSingleChoiceOption = new SingleChoiceOptionElements();
		this.pMultipleChoiceOption = new MultipleChoiceOptionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.istic.m2miage.idm.PollSystem".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//PollSystem:
	//	"PollSystem" name=ID "{" polls+=Poll+ "}";
	public PollSystemElements getPollSystemAccess() {
		return pPollSystem;
	}
	
	public ParserRule getPollSystemRule() {
		return getPollSystemAccess().getRule();
	}

	//Poll:
	//	"Poll" name=ID "{" ("description" ":" description=STRING)? questions+=Question+ "}";
	public PollElements getPollAccess() {
		return pPoll;
	}
	
	public ParserRule getPollRule() {
		return getPollAccess().getRule();
	}

	//Question:
	//	TextQuestion | ImageQuestion | SingleChoiceQuestion | MultipleChoiceQuestion;
	public QuestionElements getQuestionAccess() {
		return pQuestion;
	}
	
	public ParserRule getQuestionRule() {
		return getQuestionAccess().getRule();
	}

	//TextQuestion:
	//	"TextQuestion" name=ID "{" "text" text=STRING "}";
	public TextQuestionElements getTextQuestionAccess() {
		return pTextQuestion;
	}
	
	public ParserRule getTextQuestionRule() {
		return getTextQuestionAccess().getRule();
	}

	//ImageQuestion:
	//	"ImageQuestion" name=ID "{" "text" text=STRING "imagePath" ":" imagePath=STRING "}";
	public ImageQuestionElements getImageQuestionAccess() {
		return pImageQuestion;
	}
	
	public ParserRule getImageQuestionRule() {
		return getImageQuestionAccess().getRule();
	}

	//SingleChoiceQuestion:
	//	"SingleChoiceQuestion" name=ID "{" "text" text=STRING "Options" "{" options+=SingleChoiceOption+ "}" "}";
	public SingleChoiceQuestionElements getSingleChoiceQuestionAccess() {
		return pSingleChoiceQuestion;
	}
	
	public ParserRule getSingleChoiceQuestionRule() {
		return getSingleChoiceQuestionAccess().getRule();
	}

	//MultipleChoiceQuestion:
	//	"MultipleChoiceQuestion" name=ID "{" "text" text=STRING "Options" "{" options+=MultipleChoiceOption+ "}" "}";
	public MultipleChoiceQuestionElements getMultipleChoiceQuestionAccess() {
		return pMultipleChoiceQuestion;
	}
	
	public ParserRule getMultipleChoiceQuestionRule() {
		return getMultipleChoiceQuestionAccess().getRule();
	}

	//QuestionOption:
	//	SingleChoiceOption | MultipleChoiceOption;
	public QuestionOptionElements getQuestionOptionAccess() {
		return pQuestionOption;
	}
	
	public ParserRule getQuestionOptionRule() {
		return getQuestionOptionAccess().getRule();
	}

	//SingleChoiceOption:
	//	"()" name=ID "option" ":" option=STRING "value" ":" value=STRING;
	public SingleChoiceOptionElements getSingleChoiceOptionAccess() {
		return pSingleChoiceOption;
	}
	
	public ParserRule getSingleChoiceOptionRule() {
		return getSingleChoiceOptionAccess().getRule();
	}

	//MultipleChoiceOption:
	//	"[]" name=ID "option" ":" option=STRING "value" ":" value=STRING;
	public MultipleChoiceOptionElements getMultipleChoiceOptionAccess() {
		return pMultipleChoiceOption;
	}
	
	public ParserRule getMultipleChoiceOptionRule() {
		return getMultipleChoiceOptionAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
